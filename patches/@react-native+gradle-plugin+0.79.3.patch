diff --git a/node_modules/@react-native/gradle-plugin/.gradle/buildOutputCleanup/buildOutputCleanup.lock b/node_modules/@react-native/gradle-plugin/.gradle/buildOutputCleanup/buildOutputCleanup.lock
new file mode 100644
index 0000000..e722849
Binary files /dev/null and b/node_modules/@react-native/gradle-plugin/.gradle/buildOutputCleanup/buildOutputCleanup.lock differ
diff --git a/node_modules/@react-native/gradle-plugin/.gradle/buildOutputCleanup/cache.properties b/node_modules/@react-native/gradle-plugin/.gradle/buildOutputCleanup/cache.properties
new file mode 100644
index 0000000..109e604
--- /dev/null
+++ b/node_modules/@react-native/gradle-plugin/.gradle/buildOutputCleanup/cache.properties
@@ -0,0 +1,2 @@
+#Thu Jun 12 23:18:27 WIB 2025
+gradle.version=7.6.1
diff --git a/node_modules/@react-native/gradle-plugin/.gradle/buildOutputCleanup/outputFiles.bin b/node_modules/@react-native/gradle-plugin/.gradle/buildOutputCleanup/outputFiles.bin
new file mode 100644
index 0000000..423097a
Binary files /dev/null and b/node_modules/@react-native/gradle-plugin/.gradle/buildOutputCleanup/outputFiles.bin differ
diff --git a/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/build.gradle.kts b/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/build.gradle.kts
index 022f60c..3b28077 100644
--- a/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/build.gradle.kts
+++ b/node_modules/@react-native/gradle-plugin/react-native-gradle-plugin/build.gradle.kts
@@ -5,77 +5,44 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-import org.gradle.api.tasks.testing.logging.TestExceptionFormat
-import org.jetbrains.kotlin.gradle.dsl.JvmTarget
-import org.jetbrains.kotlin.gradle.dsl.KotlinVersion
-import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
-
 plugins {
-  alias(libs.plugins.kotlin.jvm)
-  id("java-gradle-plugin")
+    id("org.jetbrains.kotlin.jvm")
+    id("java-gradle-plugin")
 }
 
 repositories {
-  google()
-  mavenCentral()
+    google()
+    mavenCentral()
 }
 
 gradlePlugin {
-  plugins {
-    create("react") {
-      id = "com.facebook.react"
-      implementationClass = "com.facebook.react.ReactPlugin"
-    }
-    create("reactrootproject") {
-      id = "com.facebook.react.rootproject"
-      implementationClass = "com.facebook.react.ReactRootProjectPlugin"
+    plugins {
+        create("react-settings") {
+            id = "com.facebook.react.settings"
+            implementationClass = "com.facebook.react.SettingsPlugin"
+        }
     }
-  }
 }
 
 group = "com.facebook.react"
 
 dependencies {
-  implementation(project(":shared"))
-
-  implementation(gradleApi())
-
-  // The KGP/AGP version is defined by React Native Gradle plugin.
-  // Therefore we specify an implementation dep rather than a compileOnly.
-  implementation(libs.kotlin.gradle.plugin)
-  implementation(libs.android.gradle.plugin)
-
-  implementation(libs.gson)
-  implementation(libs.guava)
-  implementation(libs.javapoet)
-
-  testImplementation(libs.junit)
-  testImplementation(libs.assertj)
-  testImplementation(project(":shared-testutil"))
+    implementation(project(":shared"))
+    implementation(gradleApi())
+    implementation(libs.kotlin.gradle.plugin)
+    implementation(libs.android.gradle.plugin)
 }
 
-// We intentionally don't build for Java 17 as users will see a cryptic bytecode version
-// error first. Instead we produce a Java 11-compatible Gradle Plugin, so that AGP can print their
-// nice message showing that JDK 11 (or 17) is required first
-java { targetCompatibility = JavaVersion.VERSION_11 }
-
-kotlin { jvmToolchain(17) }
-
-tasks.withType<KotlinCompile>().configureEach {
-  compilerOptions {
-    apiVersion.set(KotlinVersion.KOTLIN_1_7)
-    // See comment above on JDK 11 support
-    jvmTarget.set(JvmTarget.JVM_11)
-    allWarningsAsErrors =
-        project.properties["enableWarningsAsErrors"]?.toString()?.toBoolean() ?: false
-  }
+java {
+    toolchain {
+        languageVersion.set(JavaLanguageVersion.of(17))
+    }
 }
 
-tasks.withType<Test>().configureEach {
-  testLogging {
-    exceptionFormat = TestExceptionFormat.FULL
-    showExceptions = true
-    showCauses = true
-    showStackTraces = true
-  }
+tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile>().configureEach {
+    compilerOptions {
+        allWarningsAsErrors.set(
+            project.properties["enableWarningsAsErrors"]?.toString()?.toBoolean() ?: false
+        )
+    }
 }
diff --git a/node_modules/@react-native/gradle-plugin/settings-plugin/build.gradle.kts b/node_modules/@react-native/gradle-plugin/settings-plugin/build.gradle.kts
index 8f5ae86..70823b5 100644
--- a/node_modules/@react-native/gradle-plugin/settings-plugin/build.gradle.kts
+++ b/node_modules/@react-native/gradle-plugin/settings-plugin/build.gradle.kts
@@ -56,8 +56,9 @@ tasks.withType<KotlinCompile>().configureEach {
     apiVersion.set(KotlinVersion.KOTLIN_1_7)
     // See comment above on JDK 11 support
     jvmTarget.set(JvmTarget.JVM_11)
-    allWarningsAsErrors =
-        project.properties["enableWarningsAsErrors"]?.toString()?.toBoolean() ?: false
+    allWarningsAsErrors.set(
+      project.properties["enableWarningsAsErrors"]?.toString()?.toBoolean() ?: false
+    )
   }
 }
 
